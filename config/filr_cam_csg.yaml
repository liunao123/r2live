%YAML:1.0

imu_topic: "/livox/imu"

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 1280
image_height: 1024
distortion_parameters:
    k1: -5.19669237e-02  #-0.0538
    k2: 1.03347881e-02 #0.1415
    p1: -4.1708394e-04 #-0.000407
    p2: -1.35346319e-04 #-0.002039
    k3: 1.69413025e-01  #-0.144126
   
projection_parameters:
    fx: 872.29034854 #875.1884
    fy: 872.70355403 #870.0817
    cx: 642.48042151 #638.3153
    cy: 511.24930372 #495.8590


  #  dist_coeffs: [, , , , ]


# Extrinsic parameter between IMU and Camera.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   #data: [0.282465,-0.959261,0.00560623,
   #       -0.509488,-0.154971,-0.846408,
   #       0.812795,0.236224,-0.532506]
  # data: [0.00795275,-0.999816,-0.0174643,
  #        -0.0838094,0.016737,-0.996341,
  #        0.99645,0.00938733,-0.0836608]

   data: [-0.0679422,-0.996691,-0.044618,
          -0.0617275,0.0488351,-0.996898,
          0.995778,-0.0649773,-0.0648412]
# test by ln 20220707


#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   #data: [0.091764, 0.00808499, 0.051303]
   #data: [0.02494282, -0.05077138, -0.01641822]
   data: [0.141631,-0.012601,-0.0358588]

   
#feature traker paprameters
max_cnt: 300           # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 5                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 3.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 10.0  # max solver itration time (ms), to guarantee real time
max_num_iterations: 4  # max solver itrations, to guarantee real time
keyframe_parallax: 10  # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 2.0558110444478399e-02          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 2.8851885453467061e-03         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 3.8550325711409205e-04         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 3.0639709624135159e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.79484       # gravity magnitude

#loop closure parameters
loop_closure: 0                    # start loop closure

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.00                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.0             # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
